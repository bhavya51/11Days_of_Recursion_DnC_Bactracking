//{ Driver Code Starts
//Initial Template for Java

import java.util.*;
import java.io.*;
import java.lang.*;

class Driver_class
{
    public static void main(String args[])
    {
        
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        
        while(t-- > 0)
        {
            int grid[][] = new int[9][9];
            for(int i = 0; i < 9; i++)
            {
                for(int j = 0; j < 9; j++)
                grid[i][j] = sc.nextInt();
            }
            
            Solution ob = new Solution();
            
            if(ob.SolveSudoku(grid) == true)
                ob.printGrid(grid);
            else
                System.out.print("NO solution exists");
            System.out.println();
            
        }
    }
}




// } Driver Code Ends


//User function Template for Java

class Solution
{
    //Function to find a solved Sudoku. 
    static boolean SolveSudoku(int grid[][])
    {
        for(int i = 0; i<9; i++){
            for(int j = 0; j<9; j++){
                if(grid[i][j]==0){
                    for(int digit = 1; digit<=9; digit++){
                        if(isAllowed(grid, i, j, digit)){
                            grid[i][j] = digit;
                            if(SolveSudoku(grid)){
                                return true;
                            }
                            else{
                                grid[i][j] = 0;
                            }
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }
    
    // isAllowed Function to check
    public static boolean isAllowed(int[][] board, int row, int col, int digit){
        for(int i=0; i<9; i++){
            if(board[i][col] == digit){ //Checks Entire Column
                return false;
            }
            if(board[row][i] == digit){ // Checks Entire Row
                return false;
            }
            if(board[3*(row/3) + (i/3)][3*(col/3) + (i%3)] == digit){ // Checks 3*3 Matrix
                return false;
            }
        }
        return true;
    }
    
    //Function to print grids of the Sudoku.
    static void printGrid (int grid[][])
    {
        SolveSudoku(grid);
        for(int i = 0; i<9; i++) {
            for(int j =0; j<9; j++){
                System.out.print(grid[i][j]+" ");
            }
        }
    }
}
